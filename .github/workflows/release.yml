name: Build Scheme Program

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Compile Scheme Program
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt install gambc -y

    - name: Install dependencies on macOS
      if: matrix.os == 'macos-latest'
      # ghostscript also installs 'gsc', so remove it first..
      run: |
        brew unlink ghostscript 
        brew install gambit-scheme

    - name: Install dependencies on Windows
      if: matrix.os == 'windows-latest'
      run: choco install gambit

    - name: Compile Scheme Program with Gambit Scheme on non-Windows
      if: matrix.os != 'windows-latest'
      run: gsc -exe main.scm

    - name: Compile Scheme Program with Gambit Scheme on Windows
      if: matrix.os == 'windows-latest'
      run: C:\ProgramData\chocolatey\lib\gambit\gsc -exe main.scm

    - name: Upload executable for Windows
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v2
      with:
        name: compiled-program-${{ matrix.os }}
        path: main.exe
    
    - name: Upload executable for GNU/Linux
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v2
      with:
        name: compiled-program-${{ matrix.os }}
        path: main
        
    - name: Upload executable for MacOS
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v2
      with:
        name: compiled-program-${{ matrix.os }}
        path: main
